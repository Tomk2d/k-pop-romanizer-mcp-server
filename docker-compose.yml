version: '3.8'

services:
  # MCP Gateway - 중앙집중형 MCP 서버
  mcp-gateway:
    build: ./mcp-gateway
    container_name: mcp-gateway
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    depends_on:
      - romanize-service
      - tts-service
    networks:
      - mcp-network

  # Romanize Service - 한국어 로마자 변환
  romanize-service:
    build: ./mcp-server
    container_name: romanize-service
    ports:
      - "8080:8080"  # 외부 8080 포트로 매핑
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - TZ=Asia/Seoul
      - SERVER_PORT=8080
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/mcp/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mcp-network

  # TTS Service - 한국어 텍스트-음성 변환
  tts-service:
    build:
      context: ./edge-tts-server
      dockerfile: docker/Dockerfile
    container_name: tts-service
    ports:
      - "8001:8000"  # 외부 8001 포트로 매핑
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=false
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - ALLOWED_ORIGINS=["*"]
      - DEFAULT_VOICE=ko-KR-SunHiNeural
      - MAX_TEXT_LENGTH=5000
    volumes:
      # 개발 시 코드 변경사항 반영을 위한 볼륨 마운트 (선택사항)
      - ./edge-tts-server/app:/app/app:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mcp-network

  # Nginx - 로드 밸런서 (선택사항)
  nginx:
    image: nginx:alpine
    container_name: mcp-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - mcp-gateway
    restart: unless-stopped
    networks:
      - mcp-network
    profiles:
      - production

networks:
  mcp-network:
    driver: bridge

volumes:
  postgres_data:
